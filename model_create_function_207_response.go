/*
FunLess Platfom API

The API for the FunLess Platform

API version: 0.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateFunction207Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFunction207Response{}

// CreateFunction207Response struct for CreateFunction207Response
type CreateFunction207Response struct {
	Data *CreateFunction207ResponseData `json:"data,omitempty"`
}

// NewCreateFunction207Response instantiates a new CreateFunction207Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFunction207Response() *CreateFunction207Response {
	this := CreateFunction207Response{}
	return &this
}

// NewCreateFunction207ResponseWithDefaults instantiates a new CreateFunction207Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFunction207ResponseWithDefaults() *CreateFunction207Response {
	this := CreateFunction207Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *CreateFunction207Response) GetData() CreateFunction207ResponseData {
	if o == nil || isNil(o.Data) {
		var ret CreateFunction207ResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFunction207Response) GetDataOk() (*CreateFunction207ResponseData, bool) {
	if o == nil || isNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CreateFunction207Response) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given CreateFunction207ResponseData and assigns it to the Data field.
func (o *CreateFunction207Response) SetData(v CreateFunction207ResponseData) {
	o.Data = &v
}

func (o CreateFunction207Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFunction207Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableCreateFunction207Response struct {
	value *CreateFunction207Response
	isSet bool
}

func (v NullableCreateFunction207Response) Get() *CreateFunction207Response {
	return v.value
}

func (v *NullableCreateFunction207Response) Set(val *CreateFunction207Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFunction207Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFunction207Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFunction207Response(val *CreateFunction207Response) *NullableCreateFunction207Response {
	return &NullableCreateFunction207Response{value: val, isSet: true}
}

func (v NullableCreateFunction207Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFunction207Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


