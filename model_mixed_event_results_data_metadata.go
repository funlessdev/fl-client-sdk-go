/*
FunLess Platfom API

The API for the FunLess Platform

API version: 0.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MixedEventResultsDataMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MixedEventResultsDataMetadata{}

// MixedEventResultsDataMetadata struct for MixedEventResultsDataMetadata
type MixedEventResultsDataMetadata struct {
	// The amount of events that was successfully connected
	Successful interface{} `json:"successful,omitempty"`
	// The amount of events that wasn't successfully connected
	Failed interface{} `json:"failed,omitempty"`
	// The total amount of events that was passed
	Total interface{} `json:"total,omitempty"`
}

// NewMixedEventResultsDataMetadata instantiates a new MixedEventResultsDataMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMixedEventResultsDataMetadata() *MixedEventResultsDataMetadata {
	this := MixedEventResultsDataMetadata{}
	return &this
}

// NewMixedEventResultsDataMetadataWithDefaults instantiates a new MixedEventResultsDataMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMixedEventResultsDataMetadataWithDefaults() *MixedEventResultsDataMetadata {
	this := MixedEventResultsDataMetadata{}
	return &this
}

// GetSuccessful returns the Successful field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MixedEventResultsDataMetadata) GetSuccessful() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Successful
}

// GetSuccessfulOk returns a tuple with the Successful field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MixedEventResultsDataMetadata) GetSuccessfulOk() (*interface{}, bool) {
	if o == nil || isNil(o.Successful) {
		return nil, false
	}
	return &o.Successful, true
}

// HasSuccessful returns a boolean if a field has been set.
func (o *MixedEventResultsDataMetadata) HasSuccessful() bool {
	if o != nil && isNil(o.Successful) {
		return true
	}

	return false
}

// SetSuccessful gets a reference to the given interface{} and assigns it to the Successful field.
func (o *MixedEventResultsDataMetadata) SetSuccessful(v interface{}) {
	o.Successful = v
}

// GetFailed returns the Failed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MixedEventResultsDataMetadata) GetFailed() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MixedEventResultsDataMetadata) GetFailedOk() (*interface{}, bool) {
	if o == nil || isNil(o.Failed) {
		return nil, false
	}
	return &o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *MixedEventResultsDataMetadata) HasFailed() bool {
	if o != nil && isNil(o.Failed) {
		return true
	}

	return false
}

// SetFailed gets a reference to the given interface{} and assigns it to the Failed field.
func (o *MixedEventResultsDataMetadata) SetFailed(v interface{}) {
	o.Failed = v
}

// GetTotal returns the Total field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MixedEventResultsDataMetadata) GetTotal() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MixedEventResultsDataMetadata) GetTotalOk() (*interface{}, bool) {
	if o == nil || isNil(o.Total) {
		return nil, false
	}
	return &o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *MixedEventResultsDataMetadata) HasTotal() bool {
	if o != nil && isNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given interface{} and assigns it to the Total field.
func (o *MixedEventResultsDataMetadata) SetTotal(v interface{}) {
	o.Total = v
}

func (o MixedEventResultsDataMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MixedEventResultsDataMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Successful != nil {
		toSerialize["successful"] = o.Successful
	}
	if o.Failed != nil {
		toSerialize["failed"] = o.Failed
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableMixedEventResultsDataMetadata struct {
	value *MixedEventResultsDataMetadata
	isSet bool
}

func (v NullableMixedEventResultsDataMetadata) Get() *MixedEventResultsDataMetadata {
	return v.value
}

func (v *NullableMixedEventResultsDataMetadata) Set(val *MixedEventResultsDataMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableMixedEventResultsDataMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableMixedEventResultsDataMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMixedEventResultsDataMetadata(val *MixedEventResultsDataMetadata) *NullableMixedEventResultsDataMetadata {
	return &NullableMixedEventResultsDataMetadata{value: val, isSet: true}
}

func (v NullableMixedEventResultsDataMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMixedEventResultsDataMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


