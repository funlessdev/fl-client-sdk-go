/*
FunLess Platfom API

The API for the FunLess Platform

API version: 0.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"os"
)

// checks if the AppCreateUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppCreateUpdate{}

// AppCreateUpdate struct for AppCreateUpdate
type AppCreateUpdate struct {
	// Name of the APP script
	Name *string `json:"name,omitempty"`
	// File with the APP script
	File **os.File `json:"file,omitempty"`
}

// NewAppCreateUpdate instantiates a new AppCreateUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppCreateUpdate() *AppCreateUpdate {
	this := AppCreateUpdate{}
	return &this
}

// NewAppCreateUpdateWithDefaults instantiates a new AppCreateUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppCreateUpdateWithDefaults() *AppCreateUpdate {
	this := AppCreateUpdate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AppCreateUpdate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppCreateUpdate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AppCreateUpdate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AppCreateUpdate) SetName(v string) {
	o.Name = &v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *AppCreateUpdate) GetFile() *os.File {
	if o == nil || IsNil(o.File) {
		var ret *os.File
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppCreateUpdate) GetFileOk() (**os.File, bool) {
	if o == nil || IsNil(o.File) {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *AppCreateUpdate) HasFile() bool {
	if o != nil && !IsNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given *os.File and assigns it to the File field.
func (o *AppCreateUpdate) SetFile(v *os.File) {
	o.File = &v
}

func (o AppCreateUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppCreateUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.File) {
		toSerialize["file"] = o.File
	}
	return toSerialize, nil
}

type NullableAppCreateUpdate struct {
	value *AppCreateUpdate
	isSet bool
}

func (v NullableAppCreateUpdate) Get() *AppCreateUpdate {
	return v.value
}

func (v *NullableAppCreateUpdate) Set(val *AppCreateUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAppCreateUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAppCreateUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppCreateUpdate(val *AppCreateUpdate) *NullableAppCreateUpdate {
	return &NullableAppCreateUpdate{value: val, isSet: true}
}

func (v NullableAppCreateUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppCreateUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


