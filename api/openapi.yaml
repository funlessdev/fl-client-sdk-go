openapi: 3.0.2
info:
  description: The API for the Funless Platform
  title: Funless Platfom API
  version: "1.0"
servers:
- description: The dev server for the funless core launched locally
  url: http://localhost:4000
paths:
  /v1/fn/invoke:
    post:
      description: Invokes the specified function from the given namespace with optional
        parameters from the POST body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/function_invocation'
        description: "Object containing the function to invoke, the namespace and\
          \ optional parameters"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Invocation of hello world:
                  value: "{\"result\": {\"payload\": \"Hello, World!\"}}"
              schema:
                $ref: '#/components/schemas/function_invocation_success'
          description: The function invocation was successfully sent to a worker
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/function_invocation_error'
          description: The invocation request was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/function_invocation_error'
          description: The required function was not found
        "500":
          content:
            application/json:
              examples:
                Invocation with internal error:
                  value: "{\"error\": \"Failed to invoke function: internal worker\
                    \ error\"}"
              schema:
                $ref: '#/components/schemas/function_invocation_error'
          description: The function invocation failed for some unspecified internal
            error
        "503":
          content:
            application/json:
              examples:
                Invocation with no workers:
                  value: "{\"error\": \"Failed to invoke function: no worker available\"\
                    }"
              schema:
                $ref: '#/components/schemas/function_invocation_error'
          description: The function invocation failed because no worker was available
      summary: Invoke a function
  /v1/fn/create:
    post:
      description: "Creates the given function, extracting the parameters from the\
        \ POST body"
      requestBody:
        content:
          multipart/form-data:
            encoding:
              code:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/function_creation'
        description: "Object containing the function to create, with name, optional\
          \ namespace, code and runtime image identifier"
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Creation of the "hellojs" function:
                  value: "{\"result\": \"hellojs\"}"
              schema:
                $ref: '#/components/schemas/function_creation_success'
          description: The function was created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/function_creation_error'
          description: The function creation request was invalid
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/function_creation_error'
          description: The function creation request failed because the database transaction
            was aborted
      summary: Create a new function
  /v1/fn/delete:
    delete:
      description: Deletes the function with the given name and namespace in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/function_deletion'
        description: Object containing the function's name and namespace to delete
        required: true
      responses:
        "204":
          content:
            application/json:
              examples:
                Deletion of the "hellojs" function:
                  value: "{\"result\": \"hellojs\"}"
              schema:
                $ref: '#/components/schemas/function_deletion_success'
          description: The function was deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/function_deletion_error'
          description: The function deletion request was invalid
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/function_deletion_error'
          description: The function deletion request failed because the database transaction
            was aborted
      summary: Delete a function
components:
  schemas:
    function_invocation:
      properties:
        namespace:
          type: string
        function:
          type: string
        args:
          type: object
      type: object
    function_invocation_success:
      example:
        result: ""
      properties:
        result:
          description: The function invocation result
      type: object
    function_invocation_error:
      properties:
        error:
          description: The error message
          type: string
      type: object
    function_creation:
      properties:
        name:
          type: string
        namespace:
          type: string
        code:
          format: binary
          type: string
      type: object
    function_creation_success:
      example:
        result: result
      properties:
        result:
          description: The name of the function
          type: string
      type: object
    function_creation_error:
      properties:
        error:
          description: The error message
          type: string
      type: object
    function_deletion:
      properties:
        name:
          type: string
        namespace:
          type: string
      type: object
    function_deletion_success:
      example:
        result: result
      properties:
        result:
          description: The name of the function
          type: string
      type: object
    function_deletion_error:
      properties:
        error:
          description: The error message
          type: string
      type: object
