/*
FunLess Platfom API

The API for the FunLess Platform

API version: 0.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ShowFunctionByName200Response struct for ShowFunctionByName200Response
type ShowFunctionByName200Response struct {
	Data *ShowFunctionByName200ResponseData `json:"data,omitempty"`
}

// NewShowFunctionByName200Response instantiates a new ShowFunctionByName200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShowFunctionByName200Response() *ShowFunctionByName200Response {
	this := ShowFunctionByName200Response{}
	return &this
}

// NewShowFunctionByName200ResponseWithDefaults instantiates a new ShowFunctionByName200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShowFunctionByName200ResponseWithDefaults() *ShowFunctionByName200Response {
	this := ShowFunctionByName200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ShowFunctionByName200Response) GetData() ShowFunctionByName200ResponseData {
	if o == nil || isNil(o.Data) {
		var ret ShowFunctionByName200ResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowFunctionByName200Response) GetDataOk() (*ShowFunctionByName200ResponseData, bool) {
	if o == nil || isNil(o.Data) {
    return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ShowFunctionByName200Response) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given ShowFunctionByName200ResponseData and assigns it to the Data field.
func (o *ShowFunctionByName200Response) SetData(v ShowFunctionByName200ResponseData) {
	o.Data = &v
}

func (o ShowFunctionByName200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableShowFunctionByName200Response struct {
	value *ShowFunctionByName200Response
	isSet bool
}

func (v NullableShowFunctionByName200Response) Get() *ShowFunctionByName200Response {
	return v.value
}

func (v *NullableShowFunctionByName200Response) Set(val *ShowFunctionByName200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableShowFunctionByName200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableShowFunctionByName200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShowFunctionByName200Response(val *ShowFunctionByName200Response) *NullableShowFunctionByName200Response {
	return &NullableShowFunctionByName200Response{value: val, isSet: true}
}

func (v NullableShowFunctionByName200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShowFunctionByName200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


