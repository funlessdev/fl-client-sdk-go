/*
FunLess Platfom API

The API for the FunLess Platform

API version: 0.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListModulesDefaultResponse struct for ListModulesDefaultResponse
type ListModulesDefaultResponse struct {
	Errors ListModulesDefaultResponseErrors `json:"errors"`
}

// NewListModulesDefaultResponse instantiates a new ListModulesDefaultResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListModulesDefaultResponse(errors ListModulesDefaultResponseErrors) *ListModulesDefaultResponse {
	this := ListModulesDefaultResponse{}
	this.Errors = errors
	return &this
}

// NewListModulesDefaultResponseWithDefaults instantiates a new ListModulesDefaultResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListModulesDefaultResponseWithDefaults() *ListModulesDefaultResponse {
	this := ListModulesDefaultResponse{}
	return &this
}

// GetErrors returns the Errors field value
func (o *ListModulesDefaultResponse) GetErrors() ListModulesDefaultResponseErrors {
	if o == nil {
		var ret ListModulesDefaultResponseErrors
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *ListModulesDefaultResponse) GetErrorsOk() (*ListModulesDefaultResponseErrors, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Errors, true
}

// SetErrors sets field value
func (o *ListModulesDefaultResponse) SetErrors(v ListModulesDefaultResponseErrors) {
	o.Errors = v
}

func (o ListModulesDefaultResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableListModulesDefaultResponse struct {
	value *ListModulesDefaultResponse
	isSet bool
}

func (v NullableListModulesDefaultResponse) Get() *ListModulesDefaultResponse {
	return v.value
}

func (v *NullableListModulesDefaultResponse) Set(val *ListModulesDefaultResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListModulesDefaultResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListModulesDefaultResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListModulesDefaultResponse(val *ListModulesDefaultResponse) *NullableListModulesDefaultResponse {
	return &NullableListModulesDefaultResponse{value: val, isSet: true}
}

func (v NullableListModulesDefaultResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListModulesDefaultResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


